pdf("graph/loadingTime.pdf")#
values <- data.frame(value = loading$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Loading Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
completionLevel1
values <- data.frame(value = completionLevel1$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Loading Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
values <- data.frame(value = completionLevel1$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
box
pdf("graph/completionTimeLevel1.pdf")#
values <- data.frame(value = completionLevel1$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
firstlineLevel1
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)
firstlineLevel1
values <- data.frame(value = firstlineLevel1$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
pdf("graph/firstLineLevel1.pdf")#
values <- data.frame(value = firstlineLevel1$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)
avergcomptime
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)
avergcomptime
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(nchar(avergcomptime $Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime$Event.Action = as.character(avergcomptime $Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime $Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime
avergcomptime$Event.Action
avergcomptime$Event.Action[1]
typeof(avergcomptime$Event.Action[1])
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]
avergcomptime
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=TRUE) + coord_flip()#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
winloseLevels
winloseLevels $Event.Action
typeof(winloseLevels $Event.Action)
typeof(c(winloseLevels $Event.Action))
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
winloseLevels <- aggregate(cbind(Unique.Events.GAMEOVER,Unique.Events.WON) ~ Event.Action, data=winlose, FUN=sum)#
winloseLevels $Event.Action = as.character(winloseLevels $Event.Action)#
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]#
box <- box + scale_x_discrete(limits=winloseLevels $Event.Action)#
print(box)
pdf("graph/compTime.pdf")#
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
winloseLevels <- aggregate(cbind(Unique.Events.GAMEOVER,Unique.Events.WON) ~ Event.Action, data=winlose, FUN=sum)#
winloseLevels $Event.Action = as.character(winloseLevels $Event.Action)#
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]#
box <- box + scale_x_discrete(limits=winloseLevels $Event.Action)#
print(box)#
makeFootnote(footnote)#
dev.off()
firstlineLevel2
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)
firstlineLevel2
values <- data.frame(value = firstlineLevel2$Avg..Value.LEVEL2)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 2")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
setwd("/Users/maxdekoninck/Dropbox/Game/Data/Survey2/R")#
library(ggplot2)#
#In deze stap wordt de tabel ingeladen, tussen de waarden staat er niets, en er is een header die de kolom namen bevat.#
#
winlose = read.csv("WIN_LOSE_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
usersday = read.csv("USERDAY20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
newvsret = read.csv("New_vs._Returning 20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
location = read.csv("Location_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
loading =read.csv("Average_LOADINGTIME_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel1 =read.csv("CompletionTime_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
#
#Footnote param#
#
scriptName <- "Analytics"#
author <- "Cheese Squeeze"#
dataperiod <- "2014/11/19-2014/11/25"#
#
###########################################################
            # Footnote script ###
###########################################################
#
footnote <- paste(scriptName, dataperiod,#
                  author, sep=" : ")#
#
makeFootnote <- function(footnoteText=#
                         format(Sys.time(), "%d %b %Y"),#
                         size= .4, color= grey(.4))#
{#
   require(grid)#
   pushViewport(viewport())#
   grid.text(label= footnoteText ,#
             x = unit(1,"npc") - unit(2, "mm"),#
             y= unit(2, "mm"),#
             just=c("right", "bottom"),#
             gp=gpar(cex= size, col=color))#
   popViewport()#
}#
#
makeFootnote(footnote)
values <- data.frame(value = firstlineLevel2$Avg..Value.LEVEL2)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 2")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
###########################################################
            # Data inlezen ###
###########################################################
#
setwd("/Users/maxdekoninck/Dropbox/Game/Data/Survey2/R")#
library(ggplot2)#
#In deze stap wordt de tabel ingeladen, tussen de waarden staat er niets, en er is een header die de kolom namen bevat.#
#
winlose = read.csv("WIN_LOSE_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
usersday = read.csv("USERDAY20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
newvsret = read.csv("New_vs._Returning 20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
location = read.csv("Location_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
loading =read.csv("Average_LOADINGTIME_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel1 =read.csv("CompletionTime_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
#
#Footnote param#
#
scriptName <- "Analytics"#
author <- "Cheese Squeeze"#
dataperiod <- "2014/11/19-2014/11/25"#
#
###########################################################
            # Footnote script ###
###########################################################
#
footnote <- paste(scriptName, dataperiod,#
                  author, sep=" : ")#
#
makeFootnote <- function(footnoteText=#
                         format(Sys.time(), "%d %b %Y"),#
                         size= .4, color= grey(.4))#
{#
   require(grid)#
   pushViewport(viewport())#
   grid.text(label= footnoteText ,#
             x = unit(1,"npc") - unit(2, "mm"),#
             y= unit(2, "mm"),#
             just=c("right", "bottom"),#
             gp=gpar(cex= size, col=color))#
   popViewport()#
}#
#
makeFootnote(footnote)#
###########################################################
            # Win lose voor de levels vegelijken ###
###########################################################
winloseLevels <- aggregate(cbind(Unique.Events.GAMEOVER,Unique.Events.WON) ~ Event.Action, data=winlose, FUN=sum)#
winloseLevels $Event.Action = as.character(winloseLevels $Event.Action)#
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]#
ratio <- (winloseLevels$Unique.Events.WON / winloseLevels$Unique.Events.GAMEOVER)#
winloseLevels  <- cbind(winloseLevels, ratio)#
winloseLevels$ratio = as.numeric(winloseLevels $ratio)#
winloseLevels$ratio = round(winloseLevels$ratio, digits = 2)#
counts <- cbind(winloseLevels$Unique.Events.GAMEOVER, winloseLevels$Unique.Events.WON)#
colnames(counts) <- c("LOSE", "WIN")#
rownames(counts) <- winloseLevels$Event.Action#
#
pdf("graph/winloseratio.pdf")#
bplt1 <- barplot(t(counts), main="WIN/LOSE -Ratio/Level",beside=T,ylab="amount of unique games", col=c("indianred1","steelblue1"),legend = colnames(counts),cex.names=0.8, las=2, ylim=c(0,max(winloseLevels$Unique.Events.GAMEOVER,winloseLevels$Unique.Events.WON)+10))#
ypos <- apply(counts, 1, max)#
text(y= ypos+1, x= colMeans(bplt1), labels=winloseLevels$ratio)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # Gebruikers / dag ###
###########################################################
#
usersday$Day.Index = as.character(usersday$Day.Index)#
users <- cbind(usersday$Users)#
rownames(users) <- usersday$Day.Index#
colnames(users) <- c("USERS")#
#
pdf("graph/usersday.pdf")#
bplt2 <- barplot(t(users),main="USERS/DAY",ylab="amount of users",col=c("steelblue1"),cex.names=0.8, las=2, ylim=c(0,max(usersday$Users)+5))#
text(y= users +1, x= bplt2, labels=usersday$Users)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # new vs return ###
###########################################################
#
slices <- cbind(newvsret$Users)#
pct <- round(slices/sum(slices)*100)#
lbls <- c(as.character(newvsret$User.Type))#
lbls <- paste(lbls, pct)#
lbls <- paste(lbls,"%",sep="")#
#
pdf("graph/newvsreturn.pdf")#
pie(slices,labels = lbls, col=c("springgreen2","steelblue1"),main="New And Returning Users")#
makeFootnote(footnote)#
dev.off()#
#
newusers <- newvsret$Users[1]#
returnusers <- newvsret$Users[2]#
users <- c(newusers-returnusers,returnusers)#
#
pdf("graph/newvsreturn.pdf")#
percent_str <- paste(round(users / sum(users) * 100,1), "%", sep="")#
values <- data.frame(users = users, Type = newvsret$User.Type, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Type)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+newvsret$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("New And Returning Users")#
pie <- pie + scale_fill_discrete(name="Type",#
                         breaks=c("New Visitor","Returning Visitor"),#
                         labels=c("Non-Returning","Returning"))#
pie <- pie + labs(x="",y="")#
print(pie)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # location ###
###########################################################
pdf("graph/location.pdf")#
percent_str <- paste(round(location$Users / sum(location$Users) * 100,1), "%", sep="")#
values <- data.frame(users = location$Users, Country = location$Country.Territory, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Country)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+location$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot laoding time###
###########################################################
pdf("graph/loadingTime.pdf")#
values <- data.frame(value = loading$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Loading Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot completionLevel1###
###########################################################
pdf("graph/completionTimeLevel1.pdf")#
values <- data.frame(value = completionLevel1$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 1###
###########################################################
pdf("graph/firstLineLevel1.pdf")#
values <- data.frame(value = firstlineLevel1$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 2###
###########################################################
pdf("graph/firstLineLevel2.pdf")#
values <- data.frame(value = firstlineLevel2$Avg..Value.LEVEL2)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 2")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
firstlineLevel2#
#
###########################################################
            # boxplot averg comp time all###
###########################################################
#
pdf("graph/compTime.pdf")#
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
firstlineLevel1
firstlineLevel2
gr <- cbind(firstlineLevel2, firstlineLevel1$Avg..Value)
gr <- merge(firstlineLevel2, firstlineLevel1)#
gr
values <- data.frame(value = cbind(firstlineLevel1$Avg..Value,firstlineLevel2$Avg..Value.LEVEL2), type = c("LEVEL1","LEVEL2"))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
cbind(firstlineLevel1$Avg..Value,firstlineLevel2$Avg..Value.LEVEL2)
c("LEVEL1","LEVEL2")
counts <- cbind(firstlineLevel1$Avg..Value,firstlineLevel2$Avg..Value.LEVEL2)#
colnames(counts) <- c("LEVEL1", "LEVEL2")
counts
gr <- merge(firstlineLevel2, firstlineLevel1,incomparables = NULL)
gr
gr <- merge(firstlineLevel2, firstlineLevel1,incomparables = NA)
counts <- cbind(firstlineLevel1$Avg..Value,firstlineLevel2$Avg..Value.LEVEL2)#
colnames(counts) <- c("LEVEL1", "LEVEL2")#
values <- data.frame(value = counts, type = c("LEVEL1","LEVEL2"))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
counts <- cbind(firstlineLevel1$Avg..Value)#
colnames(counts) <- c("LEVEL", "Time")#
rowName(counts) <- c("LEVEL1")
counts <- cbind("LEVEL1",firstlineLevel1$Avg..Value)#
colnames(counts) <- c("LEVEL", "Time")
counts
counts <- c("LEVEL1",firstlineLevel1$Avg..Value)
counts
counts <- cbind("LEVEL1",firstlineLevel1$Avg..Value)
counts
counts <- cbind("LEVEL1",firstlineLevel1$Avg..Value)#
counts <- counts[,1] + c("LEVEL")
counts <- cbind("LEVEL1",firstlineLevel1$Avg..Value)#
counts <- rbind(counts[,1],"LEVEL")
counts
counts <- cbind("LEVEL1",firstlineLevel1$Avg..Value)#
counts <- cbind(counts[,1],"LEVEL")
counts
counts1 <- cbind("LEVEL1",firstlineLevel1$Avg..Value)#
counts2 <- cbind("LEVEL2",firstlineLevel2$Avg..Value.LEVEL2)#
counts <- rbind(counts1,counts2)#
counts
counts1 <- cbind("LEVEL1",as.numeric(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.numeric(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
counts
counts1 <- cbind("LEVEL1",as.numeric(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.numeric(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
#
values <- data.frame(value = counts[,2], type = counts[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")
print(box)
counts1 <- cbind("LEVEL1",as.numeric(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.numeric(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
#
values <- data.frame(value = counts[,2], type = counts[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime$Avg..Value.WON
tyopeof(avergcomptime$Avg..Value.WON)
typeof(avergcomptime$Avg..Value.WON)
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
#
values <- data.frame(value = counts[,2], type = counts[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
#
values <- data.frame(value = counts[,2], type = counts[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")
typeof(counts[,2])
typeof(counts[,1])
counts$LEVEL
values
typeof(values$type)
typeof(values$value)
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
#
values <- data.frame(value = as.double(counts[,2]), type = as.character(counts[,1]))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
#
values <- data.frame(value = as.double(counts[,2]), type = as.character(counts[,1]))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("FirstLine")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
###########################################################
            # Data inlezen ###
###########################################################
#
setwd("/Users/maxdekoninck/Dropbox/Game/Data/Survey2/R")#
library(ggplot2)#
#In deze stap wordt de tabel ingeladen, tussen de waarden staat er niets, en er is een header die de kolom namen bevat.#
#
winlose = read.csv("WIN_LOSE_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
usersday = read.csv("USERDAY20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
newvsret = read.csv("New_vs._Returning 20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
location = read.csv("Location_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
loading =read.csv("Average_LOADINGTIME_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel1 =read.csv("CompletionTime_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
#
#Footnote param#
#
scriptName <- "Analytics"#
author <- "Cheese Squeeze"#
dataperiod <- "2014/11/19-2014/11/25"#
#
###########################################################
            # Footnote script ###
###########################################################
#
footnote <- paste(scriptName, dataperiod,#
                  author, sep=" : ")#
#
makeFootnote <- function(footnoteText=#
                         format(Sys.time(), "%d %b %Y"),#
                         size= .4, color= grey(.4))#
{#
   require(grid)#
   pushViewport(viewport())#
   grid.text(label= footnoteText ,#
             x = unit(1,"npc") - unit(2, "mm"),#
             y= unit(2, "mm"),#
             just=c("right", "bottom"),#
             gp=gpar(cex= size, col=color))#
   popViewport()#
}#
#
makeFootnote(footnote)#
###########################################################
            # Win lose voor de levels vegelijken ###
###########################################################
winloseLevels <- aggregate(cbind(Unique.Events.GAMEOVER,Unique.Events.WON) ~ Event.Action, data=winlose, FUN=sum)#
winloseLevels $Event.Action = as.character(winloseLevels $Event.Action)#
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]#
ratio <- (winloseLevels$Unique.Events.WON / winloseLevels$Unique.Events.GAMEOVER)#
winloseLevels  <- cbind(winloseLevels, ratio)#
winloseLevels$ratio = as.numeric(winloseLevels $ratio)#
winloseLevels$ratio = round(winloseLevels$ratio, digits = 2)#
counts <- cbind(winloseLevels$Unique.Events.GAMEOVER, winloseLevels$Unique.Events.WON)#
colnames(counts) <- c("LOSE", "WIN")#
rownames(counts) <- winloseLevels$Event.Action#
#
pdf("graph/winloseratio.pdf")#
bplt1 <- barplot(t(counts), main="WIN/LOSE -Ratio/Level",beside=T,ylab="amount of unique games", col=c("indianred1","steelblue1"),legend = colnames(counts),cex.names=0.8, las=2, ylim=c(0,max(winloseLevels$Unique.Events.GAMEOVER,winloseLevels$Unique.Events.WON)+10))#
ypos <- apply(counts, 1, max)#
text(y= ypos+1, x= colMeans(bplt1), labels=winloseLevels$ratio)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # Gebruikers / dag ###
###########################################################
#
usersday$Day.Index = as.character(usersday$Day.Index)#
users <- cbind(usersday$Users)#
rownames(users) <- usersday$Day.Index#
colnames(users) <- c("USERS")#
#
pdf("graph/usersday.pdf")#
bplt2 <- barplot(t(users),main="USERS/DAY",ylab="amount of users",col=c("steelblue1"),cex.names=0.8, las=2, ylim=c(0,max(usersday$Users)+5))#
text(y= users +1, x= bplt2, labels=usersday$Users)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # new vs return ###
###########################################################
#
slices <- cbind(newvsret$Users)#
pct <- round(slices/sum(slices)*100)#
lbls <- c(as.character(newvsret$User.Type))#
lbls <- paste(lbls, pct)#
lbls <- paste(lbls,"%",sep="")#
#
pdf("graph/newvsreturn.pdf")#
pie(slices,labels = lbls, col=c("springgreen2","steelblue1"),main="New And Returning Users")#
makeFootnote(footnote)#
dev.off()#
#
newusers <- newvsret$Users[1]#
returnusers <- newvsret$Users[2]#
users <- c(newusers-returnusers,returnusers)#
#
pdf("graph/newvsreturn.pdf")#
percent_str <- paste(round(users / sum(users) * 100,1), "%", sep="")#
values <- data.frame(users = users, Type = newvsret$User.Type, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Type)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+newvsret$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("New And Returning Users")#
pie <- pie + scale_fill_discrete(name="Type",#
                         breaks=c("New Visitor","Returning Visitor"),#
                         labels=c("Non-Returning","Returning"))#
pie <- pie + labs(x="",y="")#
print(pie)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # location ###
###########################################################
pdf("graph/location.pdf")#
percent_str <- paste(round(location$Users / sum(location$Users) * 100,1), "%", sep="")#
values <- data.frame(users = location$Users, Country = location$Country.Territory, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Country)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+location$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot laoding time###
###########################################################
pdf("graph/loadingTime.pdf")#
values <- data.frame(value = loading$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Loading Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot completionLevel1###
###########################################################
pdf("graph/completionTimeLevel1.pdf")#
values <- data.frame(value = completionLevel1$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 1###
###########################################################
pdf("graph/firstLineLevel1.pdf")#
values <- data.frame(value = firstlineLevel1$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 2###
###########################################################
pdf("graph/firstLineLevel2.pdf")#
values <- data.frame(value = firstlineLevel2$Avg..Value.LEVEL2)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 2")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 1 en 2###
###########################################################
pdf("graph/firstLine.pdf")#
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot averg comp time all###
###########################################################
#
pdf("graph/compTime.pdf")#
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
question = read.csv("GameQuestionnaire (Responses).csv",sep=",", na.string="#", header = TRUE)
questoin
question
question$Gender
size(question$Gender)
length(question$Gender)
v = nrow(subset(question$Gender, Gender=="Male"))
v = nrow(subset(question, Gender=="Male"))
v
perc <- round(v = nrow(subset(question, Gender=="Male")) / sum(length(question$Gender)) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = question$Gender, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = c("Male","Female"))) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+location$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)
values
perc <- round(v = nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = c("Male","Female"), percent=percent_str )
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = c("Male","Female"), percent=percent_str )
values
values$users
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = c("Male","Female"), percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill ="")) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+location$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = c("Male","Female"), percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill ="")) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = c("Male","Female"),amount = c(nrow(subset(question, Gender=="Male"),length(question$Gender)-nrow(subset(question, Gender=="Male")) ,percent=percent_str )
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )
values
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill =users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=2)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill =users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=2+amount*10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=2+amount*10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=2+amount*10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=2+amount*10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + pie <- pie + scale_fill_discrete(name="Users")#
pie <- pie + labs(x="",y="")#
#
print(pie)
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=2+amount*10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + scale_fill_discrete(name="Users")#
pie <- pie + labs(x="",y="")
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=2+amount*10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + scale_fill_discrete(name="Users")#
pie <- pie + labs(x="",y="")#
#
print(pie)
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("User Gender")#
pie <- pie + scale_fill_discrete(name="Users")#
pie <- pie + labs(x="",y="")#
#
print(pie)
pdf("graph/gender.pdf")#
#
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=8)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("User Gender")#
pie <- pie + scale_fill_discrete(name="Users")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()
question
strsplit("test",1)
strsplit("test",0)
t <- strsplit(test,1)
t <- strsplit("test",1)
t[0]
t[1]
t[2]
t <- strsplit("5.kak",".")
t
t <- strsplit("5.kak","[.]")
t
question
question$Clarity
t <- strsplit(question$Clarity,"[.]")
t <- strsplit(as.character(question$Clarity),"[.]")
t
t <- strsplit(as.character(question$Clarity),"[.]")[1,]
t <- strsplit(as.character(question$Clarity),"[.]")[,1]
t[1]
t[1,1]
t[[1]]
t[[[1]]]
t[[1]]
t[[1],]
t[1,[1]]
t[[1,1]]
t
t <- lapply(strsplit(as.character(question$Clarity),"[.]"))
t <- lapply(strsplit(as.character(question$Clarity),"[.]"),"[", 1)
t
t[1]
t[2]
question$Clarity <- lapply(strsplit(as.character(question$Clarity),"[.]"),"[", 1)
question$Clarity\
question$Clarity
question
question$Clarity <- lapply(strsplit(as.character(question$Clarity),"[.]"),"[", 1)#
question$Flow <- lapply(strsplit(as.character(question$Flow),"[.]"),"[", 1)#
question$Balance <- lapply(strsplit(as.character(question$Balance),"[.]"),"[", 1)#
question$Length <- lapply(strsplit(as.character(question$Length),"[.]"),"[", 1)#
question$Integration <- lapply(strsplit(as.character(question$Integration),"[.]"),"[", 1)#
question$Fun <- lapply(strsplit(as.character(question$Fun),"[.]"),"[", 1)
question
values <- data.frame(value = cbind(question$Clarity,question$Flow,question$Balance,question$Length,question$Integration,question$Fun), type = c("Clarity","Flow","Balance","Length","Integration","Fun"))
values <- data.frame(value = cbind(question$Clarity,question$Flow,question$Balance,question$Length,question$Integration,question$Fun))
values
values <- data.frame(value = rbind(question$Clarity,question$Flow,question$Balance,question$Length,question$Integration,question$Fun))
values
values <- data.frame(value = rbind(question$Clarity,question$Flow,question$Balance,question$Length,question$Integration,question$Fun),type = c("Clarity","Flow","Balance","Length","Integration","Fun"))
values
values <- data.frame(value = rbind(question$Clarity,question$Flow,question$Balance,question$Length,question$Integration,question$Fun),type = c("Clarity","Flow","Balance","Length","Integration","Fun"))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
pdf("graph/location.pdf")#
percent_str <- paste(round(location$Users / sum(location$Users) * 100,1), "%", sep="")#
values <- data.frame(users = location$Users, Country = location$Country.Territory, percent=percent_str )
values
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
values
data <- cbind("Clarity",question$Clarity)
data
data <- cbind("Clarity",question$Clarity)#
data <- rbind("Flow",question$Flow)
data
data <- cbind("Clarity",question$Clarity)#
data2 <- cbind("Flow",question$Flow)
data1 <- cbind("Clarity",question$Clarity)#
data2 <- cbind("Flow",question$Flow)#
#
data <- rbind(data1,data2)
data
data1 <- cbind("Clarity",as.numeric(question$Clarity))#
data2 <- cbind("Flow", as.numeric(question$Flow))#
data3 <- cbind("Balance", as.numeric(question$Balance))#
data4 <- cbind("Length", as.numeric(question$Length))#
data5 <- cbind("Integration", as.numeric(question$Integration))#
data6 <- cbind("Fun", as.numeric(question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)
data
data1 <- cbind("Clarity",as.numeric(question$Clarity))#
data2 <- cbind("Flow", as.numeric(question$Flow))#
data3 <- cbind("Balance", as.numeric(question$Balance))#
data4 <- cbind("Length", as.numeric(question$Length))#
data5 <- cbind("Integration", as.numeric(question$Integration))#
data6 <- cbind("Fun", as.numeric(question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")
data
data1 <- cbind("Clarity",as.numeric(question$Clarity))#
data2 <- cbind("Flow", as.numeric(question$Flow))#
data3 <- cbind("Balance", as.numeric(question$Balance))#
data4 <- cbind("Length", as.numeric(question$Length))#
data5 <- cbind("Integration", as.numeric(question$Integration))#
data6 <- cbind("Fun", as.numeric(question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = data[,2],type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.numeric(question$Clarity))#
data2 <- cbind("Flow", as.numeric(question$Flow))#
data3 <- cbind("Balance", as.numeric(question$Balance))#
data4 <- cbind("Length", as.numeric(question$Length))#
data5 <- cbind("Integration", as.numeric(question$Integration))#
data6 <- cbind("Fun", as.numeric(question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = data[,2],type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + xlim(1, 7)#
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + scale_x_continuous(limits = c(1, 7))#
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
#box <- box + scale_x_continuous(limits = c(1, 7))#
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + scale_x_continuous(limits = c(1, 8))#
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(xlim = c(1, 7)) #
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(1, 7)) #
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(0.5, 7.5)) #
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(0.9, 6.9)) #
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(0.9, 7,1)) #
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(0.9, 7,2)) #
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(0.9, 7,4)) #
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(1, 7)) #
print(box)#
makeFootnote(footnote)#
dev.off()
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)
counts
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
box <- ggplot(values, aes(x="", y=as.double(counts[,2]), fill=counts[,1])) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x="", y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
pdf("graph/firstLine.pdf")#
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x="", y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/firstLine.pdf")#
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x= Level, y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
###########################################################
            # Data inlezen ###
###########################################################
#
setwd("/Users/maxdekoninck/Dropbox/Game/Data/Survey2/R")#
library(ggplot2)#
#In deze stap wordt de tabel ingeladen, tussen de waarden staat er niets, en er is een header die de kolom namen bevat.#
#
winlose = read.csv("WIN_LOSE_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
usersday = read.csv("USERDAY20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
newvsret = read.csv("New_vs._Returning 20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
location = read.csv("Location_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
loading =read.csv("Average_LOADINGTIME_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel1 =read.csv("CompletionTime_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
question = read.csv("GameQuestionnaire (Responses).csv",sep=",", na.string="#", header = TRUE)#
#Footnote param#
#
scriptName <- "Analytics"#
author <- "Cheese Squeeze"#
dataperiod <- "2014/11/19-2014/11/25"#
#
###########################################################
            # Footnote script ###
###########################################################
#
footnote <- paste(scriptName, dataperiod,#
                  author, sep=" : ")#
#
makeFootnote <- function(footnoteText=#
                         format(Sys.time(), "%d %b %Y"),#
                         size= .4, color= grey(.4))#
{#
   require(grid)#
   pushViewport(viewport())#
   grid.text(label= footnoteText ,#
             x = unit(1,"npc") - unit(2, "mm"),#
             y= unit(2, "mm"),#
             just=c("right", "bottom"),#
             gp=gpar(cex= size, col=color))#
   popViewport()#
}#
#
makeFootnote(footnote)#
###########################################################
            # Win lose voor de levels vegelijken ###
###########################################################
winloseLevels <- aggregate(cbind(Unique.Events.GAMEOVER,Unique.Events.WON) ~ Event.Action, data=winlose, FUN=sum)#
winloseLevels $Event.Action = as.character(winloseLevels $Event.Action)#
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]#
ratio <- (winloseLevels$Unique.Events.WON / winloseLevels$Unique.Events.GAMEOVER)#
winloseLevels  <- cbind(winloseLevels, ratio)#
winloseLevels$ratio = as.numeric(winloseLevels $ratio)#
winloseLevels$ratio = round(winloseLevels$ratio, digits = 2)#
counts <- cbind(winloseLevels$Unique.Events.GAMEOVER, winloseLevels$Unique.Events.WON)#
colnames(counts) <- c("LOSE", "WIN")#
rownames(counts) <- winloseLevels$Event.Action#
#
pdf("graph/winloseratio.pdf")#
bplt1 <- barplot(t(counts), main="WIN/LOSE -Ratio/Level",beside=T,ylab="amount of unique games", col=c("indianred1","steelblue1"),legend = colnames(counts),cex.names=0.8, las=2, ylim=c(0,max(winloseLevels$Unique.Events.GAMEOVER,winloseLevels$Unique.Events.WON)+10))#
ypos <- apply(counts, 1, max)#
text(y= ypos+1, x= colMeans(bplt1), labels=winloseLevels$ratio)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # Gebruikers / dag ###
###########################################################
#
usersday$Day.Index = as.character(usersday$Day.Index)#
users <- cbind(usersday$Users)#
rownames(users) <- usersday$Day.Index#
colnames(users) <- c("USERS")#
#
pdf("graph/usersday.pdf")#
bplt2 <- barplot(t(users),main="USERS/DAY",ylab="amount of users",col=c("steelblue1"),cex.names=0.8, las=2, y#
=c(0,max(usersday$Users)+5))#
text(y= users +1, x= bplt2, labels=usersday$Users)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # new vs return ###
###########################################################
#
slices <- cbind(newvsret$Users)#
pct <- round(slices/sum(slices)*100)#
lbls <- c(as.character(newvsret$User.Type))#
lbls <- paste(lbls, pct)#
lbls <- paste(lbls,"%",sep="")#
#
pdf("graph/newvsreturn.pdf")#
pie(slices,labels = lbls, col=c("springgreen2","steelblue1"),main="New And Returning Users")#
makeFootnote(footnote)#
dev.off()#
#
newusers <- newvsret$Users[1]#
returnusers <- newvsret$Users[2]#
users <- c(newusers-returnusers,returnusers)#
#
pdf("graph/newvsreturn.pdf")#
percent_str <- paste(round(users / sum(users) * 100,1), "%", sep="")#
values <- data.frame(users = users, Type = newvsret$User.Type, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Type)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+newvsret$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("New And Returning Users")#
pie <- pie + scale_fill_discrete(name="Type",#
                         breaks=c("New Visitor","Returning Visitor"),#
                         labels=c("Non-Returning","Returning"))#
pie <- pie + labs(x="",y="")#
print(pie)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # location ###
###########################################################
pdf("graph/location.pdf")#
percent_str <- paste(round(location$Users / sum(location$Users) * 100,1), "%", sep="")#
values <- data.frame(users = location$Users, Country = location$Country.Territory, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Country)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+location$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot laoding time###
###########################################################
pdf("graph/loadingTime.pdf")#
values <- data.frame(value = loading$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Loading Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot completionLevel1###
###########################################################
pdf("graph/completionTimeLevel1.pdf")#
values <- data.frame(value = completionLevel1$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 1###
###########################################################
pdf("graph/firstLineLevel1.pdf")#
values <- data.frame(value = firstlineLevel1$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 2###
###########################################################
pdf("graph/firstLineLevel2.pdf")#
values <- data.frame(value = firstlineLevel2$Avg..Value.LEVEL2)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 2")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 1 en 2## TODO#
###########################################################
pdf("graph/firstLine.pdf")#
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x= Level, y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot averg comp time all###
###########################################################
#
pdf("graph/compTime.pdf")#
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot questionaire###
###########################################################
#
pdf("graph/gender.pdf")#
#
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=8)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("User Gender")#
pie <- pie + scale_fill_discrete(name="Users")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # clean questionair###
###########################################################
question$Clarity <- lapply(strsplit(as.character(question$Clarity),"[.]"),"[", 1)#
question$Flow <- lapply(strsplit(as.character(question$Flow),"[.]"),"[", 1)#
question$Balance <- lapply(strsplit(as.character(question$Balance),"[.]"),"[", 1)#
question$Length <- lapply(strsplit(as.character(question$Length),"[.]"),"[", 1)#
question$Integration <- lapply(strsplit(as.character(question$Integration),"[.]"),"[", 1)#
question$Fun <- lapply(strsplit(as.character(question$Fun),"[.]"),"[", 1)#
#
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(1, 7)) #
print(box)#
makeFootnote(footnote)#
dev.off()
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]
winloseLevels
setwd("/Users/maxdekoninck/Dropbox/Game/Data/Survey2/R")#
library(ggplot2)#
#In deze stap wordt de tabel ingeladen, tussen de waarden staat er niets, en er is een header die de kolom namen bevat.#
#
winlose = read.csv("WIN_LOSE_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
usersday = read.csv("USERDAY20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
newvsret = read.csv("New_vs._Returning 20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
location = read.csv("Location_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
loading =read.csv("Average_LOADINGTIME_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel1 =read.csv("CompletionTime_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
question = read.csv("GameQuestionnaire (Responses).csv",sep=",", na.string="#", header = TRUE)
#Footnote param#
#
scriptName <- "Analytics"#
author <- "Cheese Squeeze"#
dataperiod <- "2014/11/19-2014/11/25"#
#
###########################################################
            # Footnote script ###
###########################################################
#
footnote <- paste(scriptName, dataperiod,#
                  author, sep=" : ")#
#
makeFootnote <- function(footnoteText=#
                         format(Sys.time(), "%d %b %Y"),#
                         size= .4, color= grey(.4))#
{#
   require(grid)#
   pushViewport(viewport())#
   grid.text(label= footnoteText ,#
             x = unit(1,"npc") - unit(2, "mm"),#
             y= unit(2, "mm"),#
             just=c("right", "bottom"),#
             gp=gpar(cex= size, col=color))#
   popViewport()#
}#
#
makeFootnote(footnote)
winloseLevels <- aggregate(cbind(Unique.Events.GAMEOVER,Unique.Events.WON) ~ Event.Action, data=winlose, FUN=sum)#
winloseLevels $Event.Action = as.character(winloseLevels $Event.Action)#
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]#
ratio <- (winloseLevels$Unique.Events.WON / winloseLevels$Unique.Events.GAMEOVER)#
winloseLevels  <- cbind(winloseLevels, ratio)#
winloseLevels$ratio = as.numeric(winloseLevels $ratio)#
winloseLevels$ratio = round(winloseLevels$ratio, digits = 2)#
counts <- cbind(winloseLevels$Unique.Events.GAMEOVER, winloseLevels$Unique.Events.WON)#
colnames(counts) <- c("LOSE", "WIN")#
rownames(counts) <- winloseLevels$Event.Action#
#
pdf("graph/winloseratio.pdf")#
bplt1 <- barplot(t(counts), main="WIN/LOSE -Ratio/Level",beside=T,ylab="amount of unique games", col=c("indianred1","steelblue1"),legend = colnames(counts),cex.names=0.8, las=2, ylim=c(0,max(winloseLevels$Unique.Events.GAMEOVER,winloseLevels$Unique.Events.WON)+10))#
ypos <- apply(counts, 1, max)#
text(y= ypos+1, x= colMeans(bplt1), labels=winloseLevels$ratio)#
makeFootnote(footnote)#
dev.off()
winloseLevels
###########################################################
            # Gebruikers / dag ###
###########################################################
#
usersday$Day.Index = as.character(usersday$Day.Index)#
users <- cbind(usersday$Users)#
rownames(users) <- usersday$Day.Index#
colnames(users) <- c("USERS")#
#
pdf("graph/usersday.pdf")#
bplt2 <- barplot(t(users),main="USERS/DAY",ylab="amount of users",col=c("steelblue1"),cex.names=0.8, las=2, y#
=c(0,max(usersday$Users)+5))#
text(y= users +1, x= bplt2, labels=usersday$Users)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # new vs return ###
###########################################################
#
slices <- cbind(newvsret$Users)#
pct <- round(slices/sum(slices)*100)#
lbls <- c(as.character(newvsret$User.Type))#
lbls <- paste(lbls, pct)#
lbls <- paste(lbls,"%",sep="")#
#
pdf("graph/newvsreturn.pdf")#
pie(slices,labels = lbls, col=c("springgreen2","steelblue1"),main="New And Returning Users")#
makeFootnote(footnote)#
dev.off()#
#
newusers <- newvsret$Users[1]#
returnusers <- newvsret$Users[2]#
users <- c(newusers-returnusers,returnusers)#
#
pdf("graph/newvsreturn.pdf")#
percent_str <- paste(round(users / sum(users) * 100,1), "%", sep="")#
values <- data.frame(users = users, Type = newvsret$User.Type, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Type)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+newvsret$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("New And Returning Users")#
pie <- pie + scale_fill_discrete(name="Type",#
                         breaks=c("New Visitor","Returning Visitor"),#
                         labels=c("Non-Returning","Returning"))#
pie <- pie + labs(x="",y="")#
print(pie)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # location ###
###########################################################
pdf("graph/location.pdf")#
percent_str <- paste(round(location$Users / sum(location$Users) * 100,1), "%", sep="")#
values <- data.frame(users = location$Users, Country = location$Country.Territory, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Country)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+location$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot laoding time###
###########################################################
pdf("graph/loadingTime.pdf")#
values <- data.frame(value = loading$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Loading Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot completionLevel1###
###########################################################
pdf("graph/completionTimeLevel1.pdf")#
values <- data.frame(value = completionLevel1$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 1###
###########################################################
pdf("graph/firstLineLevel1.pdf")#
values <- data.frame(value = firstlineLevel1$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 2###
###########################################################
pdf("graph/firstLineLevel2.pdf")#
values <- data.frame(value = firstlineLevel2$Avg..Value.LEVEL2)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 2")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 1 en 2## TODO#
###########################################################
pdf("graph/firstLine.pdf")#
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x= Level, y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot averg comp time all###
###########################################################
#
pdf("graph/compTime.pdf")#
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot questionaire###
###########################################################
#
pdf("graph/gender.pdf")#
#
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=8)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("User Gender")#
pie <- pie + scale_fill_discrete(name="Users")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # clean questionair###
###########################################################
question$Clarity <- lapply(strsplit(as.character(question$Clarity),"[.]"),"[", 1)#
question$Flow <- lapply(strsplit(as.character(question$Flow),"[.]"),"[", 1)#
question$Balance <- lapply(strsplit(as.character(question$Balance),"[.]"),"[", 1)#
question$Length <- lapply(strsplit(as.character(question$Length),"[.]"),"[", 1)#
question$Integration <- lapply(strsplit(as.character(question$Integration),"[.]"),"[", 1)#
question$Fun <- lapply(strsplit(as.character(question$Fun),"[.]"),"[", 1)#
#
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(1, 7)) #
print(box)#
makeFootnote(footnote)#
dev.off()
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime$Event.Action
avergcomptime
values
avergcomptime
winlose = read.csv("WIN_LOSE_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
usersday = read.csv("USERDAY20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
newvsret = read.csv("New_vs._Returning 20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
location = read.csv("Location_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
loading =read.csv("Average_LOADINGTIME_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel1 =read.csv("CompletionTime_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
question = read.csv("GameQuestionnaire (Responses).csv",sep=",", na.string="#", header = TRUE)
winlose = read.csv("WIN_LOSE_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
usersday = read.csv("USERDAY20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
newvsret = read.csv("New_vs._Returning 20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
location = read.csv("Location_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
loading =read.csv("Average_LOADINGTIME_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel1 =read.csv("CompletionTime_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
question = read.csv("GameQuestionnaire (Responses).csv",sep=",", na.string="#", header = TRUE)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime$Event.Action)#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime$Event.Action
values
pdf("graph/completionTimeLevel2.pdf")#
values <- data.frame(value = completionLevel2$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
counts1 <- cbind("LEVEL1",as.double(completionLevel1$Event.Value.WON))#
counts2 <- cbind("LEVEL2",as.double(completionLevel2$Event.Value.WON))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x="", y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
values
completionLevel2$Event.Value.WON
###########################################################
            # Data inlezen ###
###########################################################
#
setwd("/Users/maxdekoninck/Dropbox/Game/Data/Survey2/R")#
library(ggplot2)#
#In deze stap wordt de tabel ingeladen, tussen de waarden staat er niets, en er is een header die de kolom namen bevat.#
#
winlose = read.csv("WIN_LOSE_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
usersday = read.csv("USERDAY20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
newvsret = read.csv("New_vs._Returning 20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
location = read.csv("Location_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
loading =read.csv("Average_LOADINGTIME_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel1 =read.csv("CompletionTime_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
completionLevel2 =read.csv("CompletionTime_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel1 = read.csv("FirstLine_LEVEL1_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
firstlineLevel2 = read.csv("FirstLine_LEVEL2_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)#
question = read.csv("GameQuestionnaire (Responses).csv",sep=",", na.string="#", header = TRUE)#
#Footnote param#
#
scriptName <- "Analytics"#
author <- "Cheese Squeeze"#
dataperiod <- "2014/11/19-2014/11/25"#
#
###########################################################
            # Footnote script ###
###########################################################
#
footnote <- paste(scriptName, dataperiod,#
                  author, sep=" : ")#
#
makeFootnote <- function(footnoteText=#
                         format(Sys.time(), "%d %b %Y"),#
                         size= .4, color= grey(.4))#
{#
   require(grid)#
   pushViewport(viewport())#
   grid.text(label= footnoteText ,#
             x = unit(1,"npc") - unit(2, "mm"),#
             y= unit(2, "mm"),#
             just=c("right", "bottom"),#
             gp=gpar(cex= size, col=color))#
   popViewport()#
}#
#
makeFootnote(footnote)#
###########################################################
            # Win lose voor de levels vegelijken ###
###########################################################
winloseLevels <- aggregate(cbind(Unique.Events.GAMEOVER,Unique.Events.WON) ~ Event.Action, data=winlose, FUN=sum)#
winloseLevels $Event.Action = as.character(winloseLevels $Event.Action)#
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]#
ratio <- (winloseLevels$Unique.Events.WON / winloseLevels$Unique.Events.GAMEOVER)#
winloseLevels  <- cbind(winloseLevels, ratio)#
winloseLevels$ratio = as.numeric(winloseLevels $ratio)#
winloseLevels$ratio = round(winloseLevels$ratio, digits = 2)#
counts <- cbind(winloseLevels$Unique.Events.GAMEOVER, winloseLevels$Unique.Events.WON)#
colnames(counts) <- c("LOSE", "WIN")#
rownames(counts) <- winloseLevels$Event.Action#
#
pdf("graph/winloseratio.pdf")#
bplt1 <- barplot(t(counts), main="WIN/LOSE -Ratio/Level",beside=T,ylab="amount of unique games", col=c("indianred1","steelblue1"),legend = colnames(counts),cex.names=0.8, las=2, ylim=c(0,max(winloseLevels$Unique.Events.GAMEOVER,winloseLevels$Unique.Events.WON)+10))#
ypos <- apply(counts, 1, max)#
text(y= ypos+1, x= colMeans(bplt1), labels=winloseLevels$ratio)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # Gebruikers / dag ###
###########################################################
#
usersday$Day.Index = as.character(usersday$Day.Index)#
users <- cbind(usersday$Users)#
rownames(users) <- usersday$Day.Index#
colnames(users) <- c("USERS")#
#
pdf("graph/usersday.pdf")#
bplt2 <- barplot(t(users),main="USERS/DAY",ylab="amount of users",col=c("steelblue1"),cex.names=0.8, las=2, y#
=c(0,max(usersday$Users)+5))#
text(y= users +1, x= bplt2, labels=usersday$Users)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # new vs return ###
###########################################################
#
slices <- cbind(newvsret$Users)#
pct <- round(slices/sum(slices)*100)#
lbls <- c(as.character(newvsret$User.Type))#
lbls <- paste(lbls, pct)#
lbls <- paste(lbls,"%",sep="")#
#
pdf("graph/newvsreturn.pdf")#
pie(slices,labels = lbls, col=c("springgreen2","steelblue1"),main="New And Returning Users")#
makeFootnote(footnote)#
dev.off()#
#
newusers <- newvsret$Users[1]#
returnusers <- newvsret$Users[2]#
users <- c(newusers-returnusers,returnusers)#
#
pdf("graph/newvsreturn.pdf")#
percent_str <- paste(round(users / sum(users) * 100,1), "%", sep="")#
values <- data.frame(users = users, Type = newvsret$User.Type, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Type)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+newvsret$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("New And Returning Users")#
pie <- pie + scale_fill_discrete(name="Type",#
                         breaks=c("New Visitor","Returning Visitor"),#
                         labels=c("Non-Returning","Returning"))#
pie <- pie + labs(x="",y="")#
print(pie)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # location ###
###########################################################
pdf("graph/location.pdf")#
percent_str <- paste(round(location$Users / sum(location$Users) * 100,1), "%", sep="")#
values <- data.frame(users = location$Users, Country = location$Country.Territory, percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = users, fill = Country)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = users/2 + c(0, cumsum(users)[-length(users)]), label= percent), size=2+location$Users/10)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("Location")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot laoding time###
###########################################################
pdf("graph/loadingTime.pdf")#
values <- data.frame(value = loading$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Loading Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot completionLevel1###
###########################################################
pdf("graph/completionTimeLevel1.pdf")#
values <- data.frame(value = completionLevel1$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot completionLevel2###
###########################################################
pdf("graph/completionTimeLevel2.pdf")#
values <- data.frame(value = completionLevel2$Event.Value.WON)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time Level 2")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot completionLevel 1 2###
###########################################################
pdf("graph/completionTime.pdf")#
counts1 <- cbind("LEVEL1",as.double(completionLevel1$Event.Value.WON))#
counts2 <- cbind("LEVEL2",as.double(completionLevel2$Event.Value.WON))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x="", y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot firstline level 1###
###########################################################
pdf("graph/firstLineLevel1.pdf")#
values <- data.frame(value = firstlineLevel1$Avg..Value)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 1")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot firstline level 2###
###########################################################
pdf("graph/firstLineLevel2.pdf")#
values <- data.frame(value = firstlineLevel2$Avg..Value.LEVEL2)#
box <- ggplot(values, aes(x="", y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("FirstLine Level 2")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot firstline level 1 en 2###
###########################################################
pdf("graph/firstLine.pdf")#
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x= Level, y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
###########################################################
            # boxplot averg comp time all###
###########################################################
#
pdf("graph/compTime.pdf")#
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # boxplot questionaire###
###########################################################
#
pdf("graph/gender.pdf")#
#
perc <- round(nrow(subset(question, Gender=="Male")) / length(question$Gender) * 100,1)#
percent_str <- c(paste(perc, "%", sep=""),paste(100-perc, "%", sep=""))#
#
values <- data.frame(Users = c("Male","Female"), amount = c(nrow(subset(question, Gender=="Male")),length(question$Gender)-nrow(subset(question, Gender=="Male"))) ,percent=percent_str )#
pie <- ggplot(data =values, aes(x = "", y = amount, fill = Users)) + geom_bar(width = 1,stat="identity") + geom_text(aes(y = amount/2 + c(0, cumsum(amount)[-length(amount)]), label= percent), size=8)#
pie <- pie + coord_polar(theta = "y")#
pie <- pie + ggtitle("User Gender")#
pie <- pie + scale_fill_discrete(name="Users")#
pie <- pie + labs(x="",y="")#
#
print(pie)#
makeFootnote(footnote)#
dev.off()#
#
###########################################################
            # clean questionair###
###########################################################
question$Clarity <- lapply(strsplit(as.character(question$Clarity),"[.]"),"[", 1)#
question$Flow <- lapply(strsplit(as.character(question$Flow),"[.]"),"[", 1)#
question$Balance <- lapply(strsplit(as.character(question$Balance),"[.]"),"[", 1)#
question$Length <- lapply(strsplit(as.character(question$Length),"[.]"),"[", 1)#
question$Integration <- lapply(strsplit(as.character(question$Integration),"[.]"),"[", 1)#
question$Fun <- lapply(strsplit(as.character(question$Fun),"[.]"),"[", 1)#
#
pdf("graph/questionair.pdf")#
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(1, 7)) #
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/completionTime.pdf")#
counts1 <- cbind("LEVEL1",as.double(completionLevel1$Event.Value.WON))#
counts2 <- cbind("LEVEL2",as.double(completionLevel2$Event.Value.WON))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x= Level, y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + stat_summary(fun.y=mean, geom="point", shape=5, size=4)#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
pdf("graph/firstLine.pdf")#
counts1 <- cbind("LEVEL1",as.double(firstlineLevel1$Avg..Value))#
counts2 <- cbind("LEVEL2",as.double(firstlineLevel2$Avg..Value.LEVEL2))#
counts <- rbind(counts1,counts2)#
colnames(counts) <- c("LEVEL", "Time")#
values <- data.frame(value = as.double(counts[,2]), Level = counts[,1])#
box <- ggplot(values, aes(x= Level, y=value, fill=Level)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("FirstLine")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
question$Clarity <- lapply(strsplit(as.character(question$Clarity),"[.]"),"[", 1)#
question$Flow <- lapply(strsplit(as.character(question$Flow),"[.]"),"[", 1)#
question$Balance <- lapply(strsplit(as.character(question$Balance),"[.]"),"[", 1)#
question$Length <- lapply(strsplit(as.character(question$Length),"[.]"),"[", 1)#
question$Integration <- lapply(strsplit(as.character(question$Integration),"[.]"),"[", 1)#
question$Fun <- lapply(strsplit(as.character(question$Fun),"[.]"),"[", 1)
question
data1 <- cbind("Clarity",as.double((question$Clarity))#
data2 <- cbind("Flow", as.double((question$Flow))#
data3 <- cbind("Balance", as.double((question$Balance))#
data4 <- cbind("Length", as.double((question$Length))#
data5 <- cbind("Integration", as.double((question$Integration))#
data6 <- cbind("Fun", as.double((question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])
data1 <- cbind("Clarity",as.double((question$Clarity))
question$Clarity <- lapply(strsplit(as.character(question$Clarity),"[.]"),"[", 1)#
question$Flow <- lapply(strsplit(as.character(question$Flow),"[.]"),"[", 1)#
question$Balance <- lapply(strsplit(as.character(question$Balance),"[.]"),"[", 1)#
question$Length <- lapply(strsplit(as.character(question$Length),"[.]"),"[", 1)#
question$Integration <- lapply(strsplit(as.character(question$Integration),"[.]"),"[", 1)#
question$Fun <- lapply(strsplit(as.character(question$Fun),"[.]"),"[", 1)#
data1 <- cbind("Clarity",as.double(question$Clarity))#
data2 <- cbind("Flow", as.double(question$Flow))#
data3 <- cbind("Balance", as.double(question$Balance))#
data4 <- cbind("Length", as.double(question$Length))#
data5 <- cbind("Integration", as.double(question$Integration))#
data6 <- cbind("Fun", as.double(question$Fun))#
data <- rbind(data1,data2,data3,data4,data5,data6)#
colnames(data) = c("Type","value")#
#
values <- data.frame(value = as.double(data[,2]),type = data[,1])#
pdf("graph/questionair.pdf")#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Questionair")#
box <- box + labs(x="",y="")#
box <- box + coord_cartesian(ylim = c(1, 7)) #
print(box)#
makeFootnote(footnote)#
dev.off()
winloseLevels $Event.Action = as.character(winloseLevels $Event.Action)#
winloseLevels <- winloseLevels[ order(nchar(winloseLevels$Event.Action)), ]
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill="")) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)
#avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
#avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
#avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
#avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime = read.csv("Average_CompletionTime_ALL_20141119-20141125.csv",sep=",", na.string="#", header = TRUE)
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime$Event.Action
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = as.numeric(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
vergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = as.numeric(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = as.numeric(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = as.character(avergcomptime$Event.Action))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = avergcomptime[ order(nchar(avergcomptime$Event.Action)), ])#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action, levels=unique(avergcomptime$Event.Action)))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)
pdf("graph/compTime.pdf")#
avergcomptime <- avergcomptime[ order(avergcomptime$Event.Action), ]#
avergcomptime$Event.Action = as.character(avergcomptime$Event.Action)#
avergcomptime <- avergcomptime[ order(nchar(avergcomptime$Event.Action)), ]#
values <- data.frame(value = avergcomptime$Avg..Value.WON, type = factor(avergcomptime$Event.Action, levels=unique(avergcomptime$Event.Action)))#
box <- ggplot(values, aes(x=type, y=value, fill=type)) + geom_boxplot() + guides(fill=FALSE) + coord_flip()#
box <- box + ggtitle("Completion Time")#
box <- box + labs(x="",y="Time [sec]")#
print(box)#
makeFootnote(footnote)#
dev.off()
